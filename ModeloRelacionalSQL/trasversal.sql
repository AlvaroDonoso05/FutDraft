DROP DATABASE IF EXISTS trasversal_izan_alvaro;

CREATE DATABASE trasversal_izan_alvaro;
USE trasversal_izan_alvaro;

CREATE TABLE IF NOT EXISTS EQUIPO(
	ID_EQUIPO INT NOT NULL AUTO_INCREMENT,
    NOMBRE VARCHAR(50) UNIQUE NOT NULL,
    CONSTRAINT PK_EQUIPO PRIMARY KEY(ID_EQUIPO)
);

CREATE TABLE IF NOT EXISTS JUGADOR(
	ID_JUGADOR INT NOT NULL AUTO_INCREMENT,
    ID_EQUIPO INT,
    NOMBRE VARCHAR(50) NOT NULL,
    POSICION VARCHAR(3) NOT NULL,
    FUERZA_ATAQUE INT NOT NULL,
    FUERZA_TECNICA INT NOT NULL,
    FUERZA_DEFENSA INT NOT NULL,
    FUERZA_PORTERO INT NOT NULL,
    CONSTRAINT PK_JUGADOR PRIMARY KEY(ID_JUGADOR),
    CONSTRAINT FK_EQUIPO FOREIGN KEY(ID_EQUIPO) REFERENCES EQUIPO(ID_EQUIPO)
);

CREATE TABLE IF NOT EXISTS JORNADA(
	ID_JORNADA INT NOT NULL AUTO_INCREMENT,
    NUMERO INT NOT NULL UNIQUE CHECK (NUMERO BETWEEN 1 AND 19),
    CONSTRAINT PK_JORNADA PRIMARY KEY(ID_JORNADA)
);

CREATE TABLE IF NOT EXISTS PARTIDO(
	ID_PARTIDO INT NOT NULL AUTO_INCREMENT,
    ID_JORNADA INT NOT NULL,
    ID_EQUIPO_LOCAL INT NOT NULL,
    ID_EQUIPO_VISITANTE INT NOT NULL,
    GOLES_LOCAL INT DEFAULT 0,
    GOLES_VISITANTE INT DEFAULT 0,
    CONSTRAINT PK_PARTIDO PRIMARY KEY(ID_PARTIDO),
    CONSTRAINT FK_PARTIDO_JORNADA FOREIGN KEY(ID_JORNADA) REFERENCES JORNADA(ID_JORNADA),
    CONSTRAINT FK_PARTIDO_EQUIPOL FOREIGN KEY (ID_EQUIPO_LOCAL) REFERENCES EQUIPO(ID_EQUIPO),
    CONSTRAINT FK_PARTIDO_EQUIPOV FOREIGN KEY (ID_EQUIPO_VISITANTE) REFERENCES EQUIPO(ID_EQUIPO)
);

CREATE TABLE IF NOT EXISTS EVENTOS_PARTIDO(
	ID_EVENTO INT NOT NULL AUTO_INCREMENT,
    ID_PARTIDO INT NOT NULL,
    ID_JUGADOR INT NOT NULL,
    MINUTO INT NOT NULL,
    TIPO_EVENTO ENUM('GOL', 'ASISTENCIA', 'PARADA', 'FUERA DE JUEGO', 'VAR', 'DESPEJE', 'OTRO') NOT NULL,
    DESCRIPCION TEXT,
    CONSTRAINT PK_EVENTO PRIMARY KEY(ID_EVENTO),
    CONSTRAINT FK_EVENTO_PARTIDO FOREIGN KEY(ID_PARTIDO) REFERENCES PARTIDO(ID_PARTIDO),
    CONSTRAINT FK_JUGADOR_EVENTO FOREIGN KEY(ID_JUGADOR) REFERENCES JUGADOR(ID_JUGADOR)
);

CREATE TABLE IF NOT EXISTS CLASIFICACION(
	ID_EQUIPO INT NOT NULL,
    PUNTOS INT DEFAULT 0,
    GOLES_FAVOR INT DEFAULT 0,
    GOLES_CONTRA INT DEFAULT 0,
    PARTIDOS_JUGADOS INT DEFAULT 0,
    CONSTRAINT PK_CLASIFICACION PRIMARY KEY(ID_EQUIPO),
    CONSTRAINT FK_CLASIFICACION_EQUIPO FOREIGN KEY(ID_EQUIPO) REFERENCES EQUIPO(ID_EQUIPO)    
);

CREATE TABLE GOLEADOR(
	ID_JUGADOR INT NOT NULL,
    GOLES INT DEFAULT 0,
    CONSTRAINT PK_GOLEADOR PRIMARY KEY(ID_JUGADOR),
    CONSTRAINT FK_GOLEADOR_JUGADOR FOREIGN KEY(ID_JUGADOR) REFERENCES JUGADOR(ID_JUGADOR)
);

DELIMITER //
CREATE TRIGGER actualizar_clasificacion
AFTER INSERT ON PARTIDO
FOR EACH ROW
BEGIN
    -- Actualizar equipo local
    UPDATE CLASIFICACION
    SET PARTIDOS_JUGADOS = PARTIDOS_JUGADOS + 1
    WHERE ID_EQUIPO = NEW.ID_EQUIPO_LOCAL;

    -- Actualizar equipo visitante
    UPDATE CLASIFICACION
    SET PARTIDOS_JUGADOS = PARTIDOS_JUGADOS + 1
    WHERE ID_EQUIPO = NEW.ID_EQUIPO_VISITANTE;
END;
//
DELIMITER ;

DELIMITER //
CREATE TRIGGER actualizar_goleadores
AFTER INSERT ON EVENTOS_PARTIDO
FOR EACH ROW
BEGIN
    IF NEW.TIPO_EVENTO = 'GOL' THEN
        INSERT INTO GOLEADOR (ID_JUGADOR, GOLES) 
        VALUES (NEW.ID_JUGADOR, 1)
        ON DUPLICATE KEY UPDATE GOLES = GOLES + 1;
    END IF;
END;
//
DELIMITER ;



